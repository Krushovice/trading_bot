1. Ограничение по времени: Bybit API позволяет получать ордера только за последние 7 дней, если требуется более долгий период, то нужно будет организовать хранение данных на вашей стороне.

2. Ответ API: Важным является то, что get_order_history может возвращать ограниченное количество данных (параметр limit по умолчанию — 20). Если у вас много ордеров, возможно, потребуется использовать cursor для пагинации.

Как работает бот?
1. Наследование
Класс Bot наследуется от класса Bybit. Это значит, что все методы и свойства, определенные в классе Bybit, доступны в классе Bot. Класс Bot добавляет логику торговли, используя методы для взаимодействия с биржей, предоставленные классом Bybit.

2. Инициализация (__init__)
Конструктор Bot вызывает конструктор родительского класса (Bybit) с помощью super(Bot, self).__init__(). Затем устанавливаются параметры, специфичные для бота:

self.timeout — интервал времени (в секундах) между проверками торговых сигналов.
self.timeframe — временной интервал для анализа свечей.
self.ema_length — длина для расчета экспоненциальной скользящей средней (EMA).
self.factor — множитель, используемый для увеличения порога стандартного отклонения.
self.model и self.dno — параметры, определяющие логику торговли, например, покупка на перепродаже.
3. Метод get_v
Этот метод рассчитывает разницу между ценой закрытия и экспоненциальной скользящей средней (EMA), а также стандартное отклонение для этой разницы:

Использует метод close_prices, определенный в классе Bybit, для получения цен закрытия.
Затем рассчитываются значения EMA и стандартного отклонения с помощью библиотеки ta.
4. Метод is_cross
Метод проверяет, произошло ли пересечение зоны перекупленности/перепроданности, и возвращает сигнал для покупки (1) или продажи (-1). Этот сигнал определяется на основе разницы (v) и стандартного отклонения (dev), рассчитанных в методе get_v.

5. Метод check
Этот метод отвечает за проверку торговых сигналов и размещение ордеров:

В зависимости от сигнала (cross), метод вызывает place_order на покупку или продажу.
Проверяет, есть ли уже открытая позиция с помощью метода is_position.
6. Метод loop
Этот метод запускает бесконечный цикл, который периодически вызывает метод check для выполнения торговых операций.

7. Метод run
Метод run инициализирует бота, проверяет права доступа (с помощью метода check_permissions), а затем запускает цикл торговли (метод loop).
